<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--// Header Text Style //-->
    <Style x:Key="HeaderStyle"
           TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Fonts/Cairo-SemiBold.ttf #Cairo SemiBold"/>
        <Setter Property="FontSize"
                Value="36" />
        <Setter Property="Padding"
                Value="12 0 0 0" />
        <Setter Property="Foreground"
                Value="#0d0d0d" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MinHeight" Value="12"/>
    </Style>

    <!--// Header Text Style ADD - EDIT - DELETE //-->
    <Style x:Key="HeaderStyleViewChild"
           TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Fonts/Cairo-SemiBold.ttf #Cairo SemiBold"/>
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Padding"
                Value="12 0 0 0" />
        <Setter Property="Foreground"
                Value="#0d0d0d" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>


    <!--// Footer Text Style //-->
    <Style x:Key="FooterStyle"
           TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Fonts/Cairo-SemiBold.ttf #Cairo SemiBold" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Padding"
                Value="0 0 12 0" />
        <Setter Property="Foreground"
                Value="#0d0d0d" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>


    <!--Background Grids-->
    <Style x:Key="bgheader" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#71DFE7"/>
    </Style>
    <Style x:Key="bgborder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#71DFE7"/>
    </Style>
    <Style x:Key="bgcontent" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#FFDBF9FB"/>
    </Style>
    <Style x:Key="bgfooter" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#FFE8FDFF"/>
    </Style>

    <Style x:Key="bgMainContent" TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF1EDCEA" Offset="0.372"/>
                    <GradientStop Color="#FF9EF5FB" Offset="0.925"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End-->
    
    <ImageBrush x:Key="def_img" ImageSource="Assets/Icon/DT1__UI--icon/close-old.png" Stretch="Fill"/>
    <ImageBrush x:Key="mo_img" ImageSource="Assets/Icon/DT1__UI--icon/close.png" Stretch="Fill" />
    <ImageBrush x:Key="tb_mouse_over" ImageSource="/Assets/Icon/DT1__UI--icon/menu-hover.png" />
    

    <!--// Toggle Button Menu //-->
    <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <!--//Boder Button//-->
                    <Border x:Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                    </Border>

                    <!--//Events Button//-->
                    <ControlTemplate.Triggers>
                        <!--//Button - Hover//-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                        </Trigger>

                        <!--// Checked //-->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>


    <!--// Button Close //-->
    <Style x:Key="CloseBtn_Style"
           TargetType="Button">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            Background="{StaticResource def_img}">
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource mo_img}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource def_img}" />

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//Menu Button Style//-->
    <Style x:Key="MenuButtonStyle"
           TargetType="Button">
        <Setter Property="Width"
                Value="220" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="220" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="border"
                                Background="Transparent"
                                CornerRadius="5"
                                BorderThickness="0" />
                        <Border x:Name="Highlighter"
                                Height="20"
                                Width="4"
                                Background="#00AADA"
                                CornerRadius="2"
                                HorizontalAlignment="Left"
                                Margin="0,0,5,0"
                                Visibility="Collapsed" />

                        <StackPanel Orientation="Horizontal"
                                        Width="220"
                                        Margin="-5 -2 0 0">
                            <Image x:Name="SidebarButtonMenuIcon"
                                   HorizontalAlignment="Left"
                                    Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                               Grid.Row="0"
                                
                                       Stretch="Fill"
                                       Height="42"
                                       Width="37"
                                       Margin="8,0,0,0"/>
                            <TextBlock x:Name="SidebarRadioButtonMenuText"
                                   Grid.Row="1"
                                   Width="183"
                                   Text="{TemplateBinding Property=Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   Foreground="Black"
                                   FontSize="18"
                                   FontFamily="Fonts/Roboto-Regular.ttf #Roboto Regular"
                                   Margin="16,0,0,0" />
                        </StackPanel>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FF6FE0D5" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Styles - View Child-->
    <!--Begin-->
    <!--Font-size Text Block-->
    <Style x:Key="fontsizeTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
    </Style>
    
    <!--Size Combobox-->
    <Style x:Key="sizeCombobox" TargetType="ComboBox">
        <Setter Property="Height" Value="30"/>
    </Style>
    
    <!--Style Info-->
    <Style x:Key="textblockInfo" TargetType="TextBlock">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="textboxInfo" TargetType="TextBox">
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="comboboxInfo" TargetType="ComboBox">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="textblockName" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="111"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <!--End-->
    
    <!--Styles  -  View Add - Detail-->
    <!--Begin-->
    <!--Style List-->
    <Style x:Key="headerList" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Height" Value="10"></Setter>
    </Style>
    
    <!--Style Info Add-->
    <Style x:Key="textblockChild" TargetType="TextBlock">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="textboxChild" TargetType="TextBox">
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="comboboxChild" TargetType="ComboBox">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="textblockNameChild" TargetType="TextBlock">
        <Setter Property="Width" Value="160"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--Style Info Detail-->
    <Style x:Key="textblockNameDetail" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!--End-->
    
    
    
    <!--Style TabItem-->
    <Style x:Key="TabItem" TargetType="TabItem">
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="4 0 4 0"/>
    </Style>

</ResourceDictionary>